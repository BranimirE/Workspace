#include <stdio.h>
#include <string.h>

using namespace std;
#define MAXP 25
#define MAXN 100002
int p[MAXP] = {2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97};
int f[101][MAXP];
int T[MAXN][MAXP];
void preprocesar(){
	memset(f, 0 , sizeof(f));
f[2][0]=1;f[3][1]=1;f[4][0]=2;f[5][2]=1;f[6][0]=1;f[6][1]=1;f[7][3]=1;f[8][0]=3;f[9][1]=2;f[10][0]=1;f[10][2]=1;f[11][4]=1;f[12][0]=2;f[12][1]=1;f[13][5]=1;f[14][0]=1;f[14][3]=1;f[15][1]=1;f[15][2]=1;f[16][0]=4;f[17][6]=1;f[18][0]=1;f[18][1]=2;f[19][7]=1;f[20][0]=2;f[20][2]=1;f[21][1]=1;f[21][3]=1;f[22][0]=1;f[22][4]=1;f[23][8]=1;f[24][0]=3;f[24][1]=1;f[25][2]=2;f[26][0]=1;f[26][5]=1;f[27][1]=3;f[28][0]=2;f[28][3]=1;f[29][9]=1;f[30][0]=1;f[30][1]=1;f[30][2]=1;f[31][10]=1;f[32][0]=5;f[33][1]=1;f[33][4]=1;f[34][0]=1;f[34][6]=1;f[35][2]=1;f[35][3]=1;f[36][0]=2;f[36][1]=2;f[37][11]=1;f[38][0]=1;f[38][7]=1;f[39][1]=1;f[39][5]=1;f[40][0]=3;f[40][2]=1;f[41][12]=1;f[42][0]=1;f[42][1]=1;f[42][3]=1;f[43][13]=1;f[44][0]=2;f[44][4]=1;f[45][1]=2;f[45][2]=1;f[46][0]=1;f[46][8]=1;f[47][14]=1;f[48][0]=4;f[48][1]=1;f[49][3]=2;f[50][0]=1;f[50][2]=2;f[51][1]=1;f[51][6]=1;f[52][0]=2;f[52][5]=1;f[53][15]=1;f[54][0]=1;f[54][1]=3;f[55][2]=1;f[55][4]=1;f[56][0]=3;f[56][3]=1;f[57][1]=1;f[57][7]=1;f[58][0]=1;f[58][9]=1;f[59][16]=1;f[60][0]=2;f[60][1]=1;f[60][2]=1;f[61][17]=1;f[62][0]=1;f[62][10]=1;f[63][1]=2;f[63][3]=1;f[64][0]=6;f[65][2]=1;f[65][5]=1;f[66][0]=1;f[66][1]=1;f[66][4]=1;f[67][18]=1;f[68][0]=2;f[68][6]=1;f[69][1]=1;f[69][8]=1;f[70][0]=1;f[70][2]=1;f[70][3]=1;f[71][19]=1;f[72][0]=3;f[72][1]=2;f[73][20]=1;f[74][0]=1;f[74][11]=1;f[75][1]=1;f[75][2]=2;f[76][0]=2;f[76][7]=1;f[77][3]=1;f[77][4]=1;f[78][0]=1;f[78][1]=1;f[78][5]=1;f[79][21]=1;f[80][0]=4;f[80][2]=1;f[81][1]=4;f[82][0]=1;f[82][12]=1;f[83][22]=1;f[84][0]=2;f[84][1]=1;f[84][3]=1;f[85][2]=1;f[85][6]=1;f[86][0]=1;f[86][13]=1;f[87][1]=1;f[87][9]=1;f[88][0]=3;f[88][4]=1;f[89][23]=1;f[90][0]=1;f[90][1]=2;f[90][2]=1;f[91][3]=1;f[91][5]=1;f[92][0]=2;f[92][8]=1;f[93][1]=1;f[93][10]=1;f[94][0]=1;f[94][14]=1;f[95][2]=1;f[95][7]=1;f[96][0]=5;f[96][1]=1;f[97][24]=1;f[98][0]=1;f[98][3]=2;f[99][1]=2;f[99][4]=1;f[100][0]=2;f[100][2]=2;
}
int modPow(int b, int e, int mod ){
	if(e == 0)
		return 1;
	int tmp = modPow(b, e >> 1, mod) ;
	tmp = (tmp * tmp) ;
	if(tmp >= mod) tmp %= mod;
	if(e & 1){
		tmp = (tmp * b) ;
		if(tmp >= mod) tmp %= mod;
	}
	return tmp;
}

char line[400000];
int now = 0;
inline int getn(){
	int n;
	while(1)
		if(line[now]!=0)
		{
			if(line[now]<'0' || line[now]>'9') { now++; continue;  }
			n = 0;
			while(line[now]>='0' && line[now]<='9') {n = n*10 + line[now] - '0'; now++;}
			return n;
		}
		else
		{
			gets(line);
			now = 0;
		}
	return n;

}
int main(){
	preprocesar();
	int N, tmp;
	N = getn();
	memset(T[0], 0, sizeof(T[0]));
	for(int i = 1; i <= N; ++i){
		tmp = getn();
		for(int j = 0; j < MAXP; ++j)
			T[i][j] =  T[ i - 1 ][j] + f[tmp][j];
	}
	int m,a, b, mod;
	long long int ans;
	m = getn() ;
	while(m--){
		ans = 1;
		a = getn();
		b = getn();
		mod = getn();
		for(int i = 0; i < MAXP; ++i){
			ans = ( ans * modPow(p[i]%mod, T[b][i]-T[a-1][i], mod)) % mod;
			if(!ans) break;
		}
		printf("%lld\n", ans);
	}
	return 0;
}
