#include <iostream>

using namespace std;

int padre[ MAX ];
int rango[ MAX ];


void MakeSet( int n ){
    for( int i = 0 ; i < n ; ++i ){
        padre[ i ] = i;
        rango[ i ] = 0;
    }
}
int Find( int x ){
    if( x == padre[ x ] ){         
        return x; 
    else return padre[ x ] = Find( padre[ x ] ); //Compresion de caminos
}

void UnionbyRank( int x , int y ){
    int xRoot = Find( x );
    int yRoot = Find( y );
    if( rango[ xRoot ] > rango[ yRoot ] ){ 
                                           
        padre[ yRoot ] = xRoot;            
    }
    else{                   
        padre[ xRoot ] = yRoot;
        if( rango[ xRoot ] == rango[ yRoot ] ){ 
            rango[ yRoot ]++;              
        }
    }
}
bool sameComponent( int x , int y ){
    if( Find( x ) == Find( y ) ) return true;   //si poseen la misma ra√≠z
    return false;
}

int main(){
	freopen("entrada.in", "r", stdin);

	
	return 0;
}
